@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Browser</title>

    <link rel="stylesheet" href="~/_content/Taigate.Crispy/lib/jquery-ui/themes/base/theme.css"/>
    <link rel="stylesheet" href="~/_content/Taigate.Crispy/lib/jquery-ui/themes/base/jquery-ui.css"/>
    <link rel="stylesheet" href="~/_content/Taigate.Crispy/lib/elfinder/css/elfinder.full.css"/>
    <link rel="stylesheet" href="~/_content/Taigate.Crispy/lib/elfinder/css/theme.css"/>
    @* <link rel="stylesheet" href="~/_content/Taigate.Crispy/css/elfinder/themes/dark-slim/latest/css/elfinder.theme.css'" id="elfinder-theme"/> *@
</head>
<body>
<div id="elfinder"></div>


<script src="~/_content/Taigate.Crispy/lib/jquery/dist/jquery.min.js"></script>
<script src="~/_content/Taigate.Crispy/lib/jquery-ui/jquery-ui.min.js"></script>
<script src="~/_content/Taigate.Crispy/lib/elfinder/js/elfinder.min.js"></script>

<script type="text/javascript">
        $(function () {
            var myCommands = elFinder.prototype._options.commands;

            var disabled = ['extract', 'archive', 'resize', 'help', 'select']; // Not yet implemented commands in ElFinder.Net

            $.each(disabled, function (i, cmd) {
                (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);
            });

            var options = {
				url: '/el-finder/file-system/connector', // Default (Local File System)
				//url: '/el-finder/azure-storage/connector', // Microsoft Azure Connector
                rememberLastDir: false, // Prevent elFinder saving in the Browser LocalStorage the last visited directory
                commands: myCommands,
                //lang: 'pt_BR', // elFinder supports UI and messages localization. Check the folder Content\elfinder\js\i18n for all available languages. Be sure to include the corresponding .js file(s) in the JavaScript bundle.
                uiOptions: { // UI buttons available to the user
                    toolbar: [
                        ['back', 'forward'],
                        ['reload'],
                        ['home', 'up'],
                        ['mkdir', 'mkfile', 'upload'],
                        ['open', 'download'],
                        ['undo', 'redo'],
                        ['info'],
                        ['quicklook'],
                        ['copy', 'cut', 'paste'],
                        ['rm'],
                        ['duplicate', 'rename', 'edit'],
                        ['selectall', 'selectnone', 'selectinvert'],
                        ['view', 'sort']
                    ]
                },
                commandsOptions: {
                    getfile: { multiple: true }
                },
                getFileCallback: function (file, fm) { // editor callback (see: https://github.com/Studio-42/elFinder/wiki/Integration-with-TinyMCE-4.x)
				    @if (!string.IsNullOrEmpty(ViewBag.Element))
				    {
				        @:parent.onImageSelected("#@ViewBag.Element.ToString()",file);
				        @:parent.closeModal();
				          
				    }
				    else
				    {
				        @:parent.tinymce.activeEditor.windowManager.getParams().oninsert(file, fm);
				        @:parent.tinymce.activeEditor.windowManager.close();
				    }
                }
            };
            $('#elfinder').elfinder(options).elfinder('instance');
        });
    </script>

</body>
</html>